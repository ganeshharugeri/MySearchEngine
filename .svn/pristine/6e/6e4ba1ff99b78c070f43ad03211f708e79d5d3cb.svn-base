/**
 * 
 */
package com.searchengine;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.la4j.matrix.SparseMatrix;
import org.la4j.matrix.sparse.CCSMatrix;

import sun.net.www.content.text.plain;

/**
 * @author ganeshharugeri
 *
 */
public class PageRank {

	static Storetables st = new Storetables();
	static PreparedStatement ps = null;
	static PreparedStatement ps1=null;
	static ResultSet rs =null;
	static ResultSet rs1=null;
	static int size =0;
//	static SparseMatrix initialMat = new CCSMatrix(size,size);

	
	public static void getGraphDetails() throws ClassNotFoundException, SQLException{
		
		Connection conn = st.connects();
		String nodecount = "SELECT count(*) FROM (SELECT from_docid FROM links UNION SELECT to_docid FROM links ) AS link WHERE link IS NOT NULL";
		ps = conn.prepareStatement(nodecount);
		rs = ps.executeQuery();
		while (rs.next()) {
			size = rs.getInt(1);
		}		
		System.out.println("Size: "+size);
		SparseMatrix counts = new CCSMatrix(size,size);
		SparseMatrix tMatrix = new CCSMatrix(size,size);
		SparseMatrix.zero(size, size);
		// int[][] counts = new int[size+1][size+1];
	     int[] outDegree = new int[size];
		
		 String allLinks ="Select * from links order by from_docid,to_docid";
		 ps1 = conn.prepareStatement(allLinks);
		 rs1 = ps1.executeQuery();
		 while (rs1.next()) {
			// System.out.println("From: "+rs1.getInt(1)+"  TO: "+rs1.getInt(2));
		            int i = rs1.getInt(1); 
		            int j = rs1.getInt(2); 
		            outDegree[i]++; 
		     //       System.out.println("outDegree after: "+outDegree[i]);
		           //counts[i][j]++;
		            counts.set(i, j, counts.get(i, j)+1);

			}	
       //  System.out.println(counts.toCSV());
		 
		 for (int i = 0; i < size; i++)  {
	            // Print probability for column j. 
	            for (int j = 0; j < size; j++) {
	                double p = 0.90*counts.get(i,j)/outDegree[i] + 0.10/size; 
	                //System.out.println("P value:"+p);
	                if(Double.isNaN(p)) tMatrix.set(i,j,0.10/size);
	                else tMatrix.set(i,j,p);
	            } 
	        } 
	       System.out.println(tMatrix.toCSV());		
	}
	
	
  public static void main(String[] args) throws ClassNotFoundException, SQLException{
	  getGraphDetails();
	  
  }
	
}
